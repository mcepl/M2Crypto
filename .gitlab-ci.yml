stages:
  - build
  - deploy

include: '/.gitlab-ci-windows.yml'

python39:
    image: python:3.9
    when: always
    stage: build
    script:
        - apt-get update -q -y
        - apt-get install -y swig libssl-dev python3-dev python3-pip python3-wheel openssl python3-setuptools python3-twisted python3-pip
        - export PATH=$PATH:$HOME/.local/bin
        - python3 -mpip install --user -r dev-requirements.txt
        - python3 -mbuild .
        - python3 -mpip install -v --upgrade --target build/lib.linux-x86_64-cpython-39 --no-compile --ignore-installed --no-deps --no-index dist/M2Crypto*.whl
        - PYTHONPATH=build/lib.linux-x86_64-cpython-39 python3 -munittest -b -v tests.alltests.suite

python3:
    image: python:3
    when: always
    stage: build
    script:
        - apt-get update -q -y
        - apt-get install -y swig libssl-dev python3-dev python3-pip openssl python3-setuptools python3-twisted python3-pip
        - export PATH=$PATH:$HOME/.local/bin
        - python3 -mpip install --break-system-packages --user -r dev-requirements.txt
        - python3 -mbuild .
        - python3 -mpip install --break-system-packages -v --upgrade --target $(readlink -f build/lib.*) --no-compile --ignore-installed --no-deps --no-index dist/M2Crypto*.whl
        - PYTHONPATH=$(readlink -f build/lib.*) python3 -munittest -b -v tests.alltests.suite

python3-doctest:
    image: python:3
    when: always
    stage: build
    script:
        - apt-get update -q -y
        - apt-get install -y swig libssl-dev python3-dev python3-pip openssl python3-setuptools python3-twisted python3-pip
        - export PATH=$PATH:$HOME/.local/bin
        - python3 -mpip install --break-system-packages --user -r dev-requirements.txt -r doc/requirements.txt
        - python3 -mbuild .
        - python3 -mpip install --break-system-packages -v --upgrade --target $(readlink -f build/lib.*) --no-compile --ignore-installed --no-deps --no-index dist/M2Crypto*.whl
        - cd doc/
        - PYTHONPATH=$(readlink -f ../build/lib.*) make doctest

fedora:
    image: fedora:latest
    when: always
    stage: build
    script:
        - dnf makecache
        - dnf install -y @development-tools fedora-packager rpmdevtools
        - dnf install -y swig python3-devel python3-pip openssl-devel openssl python3-setuptools python3-twisted
        - export PATH=$PATH:$HOME/.local/bin
        - python3 -mpip install --user -r dev-requirements.txt
        - python3 -mbuild .
        - python3 -mpip install -v --upgrade --target $(readlink -f build/lib.*) --no-compile --ignore-installed --no-deps --no-index dist/M2Crypto*.whl
        - PYTHONPATH=$(readlink -f build/lib.*) python3 -munittest -b -v tests.alltests.suite

fedora-rawhide:
    image: registry.fedoraproject.org/fedora:rawhide
    when: always
    stage: build
    script:
        - dnf makecache
        - dnf install -y @development-tools fedora-packager rpmdevtools
        - dnf install -y swig python3-devel python3-pip openssl-devel openssl python3-setuptools python3-twisted openssl-devel-engine
        - export PATH=$PATH:$HOME/.local/bin
        - python3 -mpip install --break-system-packages --user -r dev-requirements.txt
        - python3 -mbuild .
        - python3 -mpip install --break-system-packages -v --upgrade --target $(readlink -f build/lib.*) --no-compile --ignore-installed --no-deps --no-index dist/M2Crypto*.whl
        - PYTHONPATH=$(readlink -f build/lib.*) python3 -munittest -b -v tests.alltests.suite

centos7:
    image: centos:7
    when: always
    stage: build
    script:
        - yum install -y epel-release
        - yum makecache
        - yum groups install -y "Development Tools"
        - yum install -y swig python36-devel python36-pip python36-wheel openssl openssl-devel python36-service-identity python36-setuptools python36-pip python36-Twisted
        - export PATH=$PATH:$HOME/.local/bin
        - python3 -mpip install --user -r dev-requirements.txt
        - python3 -mpip wheel --verbose --no-deps --wheel-dir ./dist .
        - python3 -mpip install -v --upgrade --target build/lib.* --no-compile --ignore-installed --no-deps --no-index dist/M2Crypto*.whl
        - PYTHONPATH=build/lib.* python3 -munittest -b -v tests.alltests.suite

leap:
    # image: registry.suse.com/bci/bci-base:latest
    image: opensuse/leap
    when: always
    stage: build
    script:
        - zypper refresh
        - zypper install -y pattern:devel_rpm_build pattern:devel_C_C++ osc
        - zypper install -y swig python3-devel python3-pip libopenssl-devel openssl python3-service_identity python3-setuptools python3-Twisted
        - export PATH=$PATH:$HOME/.local/bin
        - python3 -mpip install --user -r dev-requirements.txt
        - python3 -mbuild .
        - python3 -mpip install -v --upgrade --target $(readlink -f build/lib.*) --no-compile --ignore-installed --no-deps --no-index dist/M2Crypto*.whl
        - PYTHONPATH=$(readlink -f build/lib.*) python3 -munittest -b -v tests.alltests.suite

opensuse:
    image: opensuse/tumbleweed
    when: always
    stage: build
    script:
        - zypper refresh
        - zypper install -y pattern:devel_rpm_build pattern:devel_C_C++ osc
        - zypper install -y swig python3-devel python3-pip libopenssl-devel openssl python3-service_identity python3-setuptools python3-Twisted
        - export PATH=$PATH:$HOME/.local/bin
        - python3 -mpip install --user --break-system-packages -r dev-requirements.txt
        - python3 -mbuild .
        - python3 -mpip install -v --upgrade --target $(readlink -f build/lib.*) --no-compile --ignore-installed --no-deps --no-index dist/M2Crypto*.whl
        - PYTHONPATH=$(readlink -f build/lib.*) python3 -munittest -b -v tests.alltests.suite

build-sdist:
    image: python:3
    when: always
    stage: build
    artifacts:
      paths:
        - "dist/*.tar.gz"
    script:
        - apt-get update -q -y
        - apt-get install -y swig libssl-dev python3-dev python3-pip openssl python3-setuptools python3-twisted python3-pip
        - export PATH=$PATH:$HOME/.local/bin
        - python3 -mpip install --break-system-packages --user -r dev-requirements.txt
        - python3 -mbuild . --sdist

release-pypi:
  stage: deploy
  image: python:latest
  dependencies:
    - build-test-windows
    - build-sdist
  id_tokens:
    PYPI_ID_TOKEN:
      aud: pypi
  script:
    - echo "Built artifacts:"
    - ls dist/
    # Install dependencies
    - apt update && apt install -y jq
    - python -m pip install -U twine id

    # Retrieve the OIDC token from GitLab CI/CD, and exchange it for a PyPI API token
    - oidc_token=$(python -m id PYPI)
    - resp=$(curl -X POST https://pypi.org/_/oidc/mint-token -d "{\"token\":\"${oidc_token}\"}")
    - api_token=$(jq --raw-output '.token' <<< "${resp}")

    # Upload wheel to PyPI authenticating via the newly-minted token
    - twine upload -u __token__ -p "${api_token}" dist/*
  rules:
    - if: $CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+$/  # Job enabled only when pushing tags for versions, e.g: 0.40.1
      when: manual   # Can only be triggered manually